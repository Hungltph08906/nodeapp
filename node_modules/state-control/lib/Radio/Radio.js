"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _constants = require("../common/constants");

var _controlled = _interopRequireDefault(require("../common/controlled"));

var _utils = require("../common/utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var valueType = process.env.NODE_ENV !== "production" ? _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]) : {};

var Radio = /*#__PURE__*/function (_React$PureComponent) {
  _inheritsLoose(Radio, _React$PureComponent);

  function Radio() {
    return _React$PureComponent.apply(this, arguments) || this;
  }

  var _proto = Radio.prototype;

  _proto.render = function render() {
    var _this = this;

    var _this$props = this.props,
        className = _this$props.className,
        id = _this$props.id,
        label = _this$props.label,
        suffix = _this$props.suffix,
        values = _this$props.values,
        value = _this$props.value,
        refHandler = _this$props.refHandler,
        onClick = _this$props.onClick,
        onFocus = _this$props.onFocus,
        readOnly = _this$props.readOnly,
        numberColor = _this$props.numberColor,
        passedProps = _objectWithoutPropertiesLoose(_this$props, ["className", "id", "label", "suffix", "values", "value", "refHandler", "onClick", "onFocus", "readOnly", "numberColor"]);

    return /*#__PURE__*/_react["default"].createElement("div", {
      className: className,
      id: id,
      style: {
        marginBottom: '0.8em'
      }
    }, label, values.map(function (currentValue) {
      var variantId = id + "-" + currentValue;
      return /*#__PURE__*/_react["default"].createElement("div", {
        key: variantId
      }, /*#__PURE__*/_react["default"].createElement("input", _extends({
        id: variantId,
        name: id,
        type: "radio",
        checked: value === currentValue,
        value: currentValue,
        ref: refHandler(_this),
        onClick: onClick(_this),
        onFocus: onFocus(_this),
        disabled: readOnly,
        style: {
          margin: '3px 3px 2px 5px'
        }
      }, passedProps)), /*#__PURE__*/_react["default"].createElement("label", {
        htmlFor: variantId
      }, currentValue.label || currentValue));
    }), suffix);
  };

  return Radio;
}(_react["default"].PureComponent);

_defineProperty(Radio, "defaultProps", {
  className: '',
  id: '',
  label: '',
  suffix: '',
  value: '',
  values: [],
  refHandler: _utils.noop,
  onClick: _utils.noop,
  onFocus: _utils.noop,
  readOnly: false,
  numberColor: false
});

Radio.propTypes = process.env.NODE_ENV !== "production" ? {
  className: _propTypes["default"].string,
  id: _propTypes["default"].string,
  label: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),
  suffix: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),
  value: valueType,
  values: _propTypes["default"].arrayOf(valueType),
  refHandler: _propTypes["default"].func,
  onClick: _propTypes["default"].func,
  onFocus: _propTypes["default"].func,
  readOnly: _propTypes["default"].bool,
  numberColor: _constants.NUMBER_COLOR_TYPE
} : {};

var _default = (0, _controlled["default"])(Radio);

exports["default"] = _default;
module.exports = exports.default;